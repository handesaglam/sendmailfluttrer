import 'package:flutter/material.dart';
import 'constant.dart';
import 'main.dart';
import 'dart:async';
import 'dart:convert';
import 'package:http/http.dart' as http;
import 'package:rflutter_alert/rflutter_alert.dart';
import 'package:mailer/mailer.dart';
import 'package:mailer/smtp_server.dart';
class Regist extends StatefulWidget {
  @override
  _RegistState createState() => _RegistState();
}

class _RegistState extends State<Regist> {
 bool visible = false ;
	TextEditingController name=new TextEditingController();
	TextEditingController email=new TextEditingController();
	TextEditingController password=new TextEditingController();
	

@override
  void initState() {
    // TODO: implement initState
    super.initState();
   

  }

	Future<List> senddata() async {
print("deneme");



	}
	
emailverifacation() async{
 String username = 'handesaglam70@gmail.com';
  String password = '';

  final smtpServer = gmail(username, password);
  // Use the SmtpServer class to configure an SMTP server:
  // final smtpServer = SmtpServer('smtp.domain.com');
  // See the named arguments of SmtpServer for further configuration
  // options.  
  
  // Create our message.
  final message = Message()
    ..from = Address(username, 'Your name')
    ..recipients.add('handesaglam70@gmail.com')
   // ..ccRecipients.addAll(['destCc1@example.com', 'destCc2@example.com'])
   // ..bccRecipients.add(Address('bccAddress@example.com'))
    ..subject = 'Test Dart Mailer library :: ðŸ˜€ :: ${DateTime.now()}'
    ..text = 'This is the plain text.\nThis is line 2 of the text part.'
    ..html = "<h1>Test</h1>\n<p>Hey! Here's some HTML content</p>";

  try {
    final sendReport = await send(message, smtpServer);
    print('Message sent: ' + sendReport.toString());
  } on MailerException catch (e) {
    print('Message not sent.');
    for (var p in e.problems) {
      print('Problem: ${p.code}: ${p.msg}');
    }
  }
  // DONE



}


  @override
  Widget build(BuildContext context) {

return Scaffold(
  backgroundColor: Colors.white,
  body: SingleChildScrollView(
    child: Column(
children: <Widget>[
  Padding(padding:const EdgeInsets.only(top: 30),
  child: Center (
   child: Container(
    
     child: Image.asset(


       'assets/logo.png',

       height: 250,
       width: 500,


     ),

   ),


  )

  ),
Padding(
      padding: const EdgeInsets.only(top:1,left: 15,right: 15),
      //  padding: EdgeInsets.symmetric(horizontal: 15),
      child: Container(


        alignment: Alignment.centerLeft,
        decoration: kBoxDecorationStyle,
        height: 60.0,
        child: TextField(
     controller: name,    

            keyboardType: TextInputType.emailAddress,
            style: TextStyle(
                color: Colors.black,
                //fontFamily: 'OpenSans',
                fontWeight: FontWeight.bold,
                fontSize: 18

            ),

            decoration: InputDecoration(
              border: InputBorder.none,
              contentPadding: EdgeInsets.only(top: 14.0),
              prefixIcon: Icon(
                  Icons.person,
                  color: Colors.grey



              ),


              hintText: 'Ad',
              hintStyle: kHintTextStyle,


            )

        ),


      )
  ),


  Padding(
      padding: const EdgeInsets.only(top:10,left: 15,right: 15),
      //  padding: EdgeInsets.symmetric(horizontal: 15),
      child: Container(


        alignment: Alignment.centerLeft,
        decoration: kBoxDecorationStyle,
        height: 60.0,
        child: TextField(
     controller: email,
            keyboardType: TextInputType.emailAddress,
            style: TextStyle(
                color: Colors.black,
                //fontFamily: 'OpenSans',
                fontWeight: FontWeight.bold,
                fontSize: 18

            ),

            decoration: InputDecoration(
              border: InputBorder.none,
              contentPadding: EdgeInsets.only(top: 14.0),
              prefixIcon: Icon(
                  Icons.email,
                  color: Colors.grey



              ),


              hintText: 'Email',
              hintStyle: kHintTextStyle,


            )

        ),


      )
  ),
  Padding(
      padding: const EdgeInsets.only(top:10,left: 15,right: 15),
      //  padding: EdgeInsets.symmetric(horizontal: 15),
      child: Container(


        alignment: Alignment.centerLeft,
        decoration: kBoxDecorationStyle,
        height: 60.0,
        child: TextField(
        controller: password,
            keyboardType: TextInputType.emailAddress,
            style: TextStyle(
                color: Colors.black,
                //fontFamily: 'OpenSans',
                fontWeight: FontWeight.bold,
                fontSize: 18

            ),

            decoration: InputDecoration(
              border: InputBorder.none,
              contentPadding: EdgeInsets.only(top: 14.0),
              prefixIcon: Icon(
                  Icons.lock,
                  color: Colors.grey



              ),


              hintText: 'Åžifre',
              hintStyle: kHintTextStyle,


            )



        ),

      )
  ),
 Padding(
      padding: const EdgeInsets.only(top:10,left: 15,right: 15),
      //  padding: EdgeInsets.symmetric(horizontal: 15),
      child: Container(


        alignment: Alignment.centerLeft,
        decoration: kBoxDecorationStyle,
        height: 60.0,
        child: TextField(
        controller: password,
            keyboardType: TextInputType.emailAddress,
            style: TextStyle(
                color: Colors.black,
                //fontFamily: 'OpenSans',
                fontWeight: FontWeight.bold,
                fontSize: 18

            ),

            decoration: InputDecoration(
              border: InputBorder.none,
              contentPadding: EdgeInsets.only(top: 14.0),
              prefixIcon: Icon(
                  Icons.lock,
                  color: Colors.grey



              ),


              hintText: 'Åžifre tekrar girin',
              hintStyle: kHintTextStyle,


            )



        ),

      )
  ),




 Padding(
    padding: const EdgeInsets.only(top: 20,left: 20,right: 20),
child: GestureDetector(
onTap: (){
//erRegistration();
emailverifacation();
},

child: Container(
 width: MediaQuery.of(context).size.width,
      padding: EdgeInsets.symmetric(vertical: 15),
      alignment: Alignment.center,
      decoration: BoxDecoration(
          borderRadius: BorderRadius.all(Radius.circular(5)),
          boxShadow: <BoxShadow>[
            BoxShadow(
                color: Colors.grey.shade200,
                offset: Offset(2, 4),
                blurRadius: 5,
                spreadRadius: 2)
          ],
          gradient: LinearGradient(
              begin: Alignment.centerLeft,
              end: Alignment.centerRight,
              colors: [Color(0xFF4A148C), Color(0xFF4A148C)])),
      child: Text(
        'KayÄ±t ol',
        style: TextStyle(fontSize: 20, color: Colors.white),
      ),
    

),

)

 ),
Padding( 
    padding: const EdgeInsets.only(top: 0,left: 20,right: 20),
child: InkWell(
onTap: (){


 Navigator.push(context,
        MaterialPageRoute(builder: (context) => MyApp()));



},
child: Container(
        margin: EdgeInsets.symmetric(vertical: 20),
        padding: EdgeInsets.all(15),
        alignment: Alignment.bottomCenter,
        child: Row(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            Text(
              'HesabÄ±n var mÄ±?',
              style: TextStyle(fontSize: 13, fontWeight: FontWeight.w600),
            ),
            SizedBox(
              width: 10,
            ),
            Text(
              'GiriÅŸ Yap',
              style: TextStyle(
                  color: Color(0xfff79c4f),
                  fontSize: 13,
                  fontWeight: FontWeight.w600),
            ),
          ],
        ),



)


),





),




],



    ),





  ),








);




  }
}
